name: Rust

on:
  push:
    branches: '**'
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
      - '[0-9]+.[0-9]+.[0-9]+-**'
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install Dependencies
      run: |
        curl https://deepviewml.com/apt/key.pub | sudo gpg --dearmor -o /usr/share/keyrings/deepviewml.gpg
        echo 'deb [signed-by=/usr/share/keyrings/deepviewml.gpg] https://deepviewml.com/apt stable main' | sudo tee /etc/apt/sources.list.d/deepviewml.list
        sudo apt-get update
        sudo apt-get install libvideostream
    - name: Run tests
      run: cargo test --verbose

  format:
    name: Format
    runs-on: ubuntu-latest
    env:
      RUSTV: nightly-2023-07-01
    steps:
      - uses: actions/checkout@v2
      - name: Install
        run: |
          rustup toolchain install $RUSTV
          rustup component add --toolchain $RUSTV rustfmt
      - name: Check
        run: cargo +$RUSTV fmt -- --check

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [test, format]
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v2
      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-release
      - name: Parse Version
        run: echo GIT_VERSION=$(git describe --tags) >> $GITHUB_ENV
      - name: Deployment Branch
        run: |
          git config user.email support@au-zone.com
          git config user.name "Au-Zone Technologies"
          git checkout -b deploy_branch
      - name: Update Version
        run: |
          sed -i "s/0.0.0/$GIT_VERSION/g" videostream-sys/Cargo.toml
          git add videostream-sys/Cargo.toml
          sed -i "s/0.0.0/$GIT_VERSION/g" Cargo.toml
          git add Cargo.toml
          git commit -m "Deploy $GIT_VERSION"
      - name: Publish
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: cargo release publish --workspace --execute --no-confirm
